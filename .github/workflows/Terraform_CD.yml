name: 'Terraform CD'

on:
  repository_dispatch:
    types:
      - push-to-repo

jobs:
  terraform:
    name: 'Updating Terraform and deploying to Azure'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_SUB_ID_SECRET: ${{ secrets.AZURE_SUB_ID }}
      TF_VAR_AZURE_TENANT_ID_SECRET: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_CLIENT_ID_SECRET: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_AZURE_CLIENT_SECRET_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_SOURCE_PAT: ${{ secrets.SOURCE_PAT }}
      TF_VAR_SOURCE_PAT_ME: ${{ secrets.SOURCE_PAT_ME }}

    runs-on: ubuntu-latest
    environment: production

    defaults:
      run:
        shell: bash

    steps:
      - name: Setup
        run: |
          sudo apt-get update
          sudo apt-get install jq -y

      - name: Check if Workflow is Running
        id: check_workflow
        run: |
          # Query the GitHub API to check for running instances of the same workflow
          RESPONSE=$(curl -s -X GET -u "${{ secrets.GITHUB_ACTOR }}:${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/workflows/${{ github.workflow }}/runs")

          # Check if there's a running workflow other than the current one
          if [[ $(echo "$RESPONSE" | jq '.workflow_runs | .[] | select(.status == "in_progress" and .id != ${{ github.run_id }})') ]]; then
            echo "Another instance of the workflow is already running. Exiting."
            exit 0
          fi


      - name: Checkout Terraform Repository
        uses: actions/checkout@v3
        with:
          repository: Labb3PubliceringSnitches/Terraform

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

      - name: Remove Plan File
        run: rm tfplan
      
      # - name: Authenticate Azure CLI with Service Principal
      #   run: |
      #     az login --service-principal --username ${{ secrets.AZURE_CLIENT_ID }} --password ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT }}
      #     az account set --subscription ${{ secrets.AZURE_SUB_ID }}

      # - name: Restart Azure Web App
      #   run: |
      #     az webapp restart --name Snitches --resource-group labb3-snitches-rg
