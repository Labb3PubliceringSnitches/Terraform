# name: Terraform CD

# on:
#   workflow_dispatch:
#     inputs:
#       event_type:
#         description: Update Terraform
#         required: true

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     env:
#       TF_VAR_AZURE_SUB_ID_SECRET: ${{ secrets.AZURE_SUB_ID }}
#       TF_VAR_AZURE_TENANT_ID_SECRET: ${{ secrets.AZURE_TENANT }}
#       TF_VAR_AZURE_CLIENT_ID_SECRET: ${{ secrets.AZURE_CLIENT_ID }}
#       TF_VAR_AZURE_CLIENT_SECRET_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#       TF_VAR_SOURCE_PAT: ${{ secrets.SOURCE_PAT }}

#     steps:

#       - name: Checkout Terraform Repository
#         uses: actions/checkout@v2
#         with:
#           repository: Labb3PubliceringSnitches/Terraform

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_version: latest

#       - name: Terraform Init
#         run: terraform init -reconfigure

#       - name: Terraform Plan
#         run: terraform plan -out=tfplan

#       - name: Terraform Apply
#         run: terraform apply -auto-approve tfplan

#       - name: Remove Plan File
#         run: rm tfplan

name: 'Terraform'
 
on:
  push:
    branches:
    - main
  pull_request:
 
jobs:
  terraform:
    name: 'Terraform'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_SUB_ID_SECRET: ${{ secrets.AZURE_SUB_ID }}
      TF_VAR_AZURE_TENANT_ID_SECRET: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_CLIENT_ID_SECRET: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_AZURE_CLIENT_SECRET_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_SOURCE_PAT: ${{ secrets.SOURCE_PAT }}

    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2

         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'init'
        tf_actions_working_dir: "./terraform"
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'validate'
        tf_actions_working_dir: "./terraform"
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'plan'
        tf_actions_working_dir: "./terraform"
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 0.14.8
        tf_actions_subcommand: 'apply'
        tf_actions_working_dir: "./terraform"