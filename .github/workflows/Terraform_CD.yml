name: 'Terraform CD'
 
on:
  workflow_dispatch:
    inputs:
      event_type:
        description: Update Terraform
        required: true
 
jobs:
  terraform:
    name: 'Updating Terraform and deploying to Azure'
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUB_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_SUB_ID_SECRET: ${{ secrets.AZURE_SUB_ID }}
      TF_VAR_AZURE_TENANT_ID_SECRET: ${{ secrets.AZURE_TENANT }}
      TF_VAR_AZURE_CLIENT_ID_SECRET: ${{ secrets.AZURE_CLIENT_ID }}
      TF_VAR_AZURE_CLIENT_SECRET_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      TF_VAR_SOURCE_PAT: ${{ secrets.SOURCE_PAT }}
      TF_VAR_SOURCE_PAT_ME: ${{ secrets.SOURCE_PAT_ME }}

    runs-on: ubuntu-latest
    environment: production
 
    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
 
    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout repository
      uses: actions/checkout@v2

         
    - name: 'Terraform Init'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.5.6
        tf_actions_subcommand: 'init'
 
    - name: 'Terraform Validate'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.5.6
        tf_actions_subcommand: 'validate'
         
    - name: 'Terraform Plan'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.5.6
        tf_actions_subcommand: 'plan'
 
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main'
      uses: hashicorp/terraform-github-actions@master
      with:
        tf_actions_version: 1.5.6
        tf_actions_subcommand: 'apply'